name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Cache Poetry
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Install Poetry
        run: pip install --no-input poetry

      - name: "Install tox"
        run: |
          python -m pip install --upgrade tox tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }}"
        run: python -m tox

  sonarqube:
    name: SonarQube Cloud
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Setup Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install tox and any other packages
        run: pip install tox
      - name: Run tox
        run: tox -e py
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@fd88b7d7ccbaefd23d8f36f73b59db7a3d246602 # v6.0.0
        with:
          args: >
            "-Dsonar.projectName=py-petkit-api"
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
